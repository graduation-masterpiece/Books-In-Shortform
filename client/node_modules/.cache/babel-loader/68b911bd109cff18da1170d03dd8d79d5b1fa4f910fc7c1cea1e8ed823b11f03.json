{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sstvl\\\\graduation\\\\client\\\\src\\\\components\\\\SearchResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Modal from \"./Modal\"; // 알림 창\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResults = ({\n  results\n}) => {\n  _s();\n  const [loadingMessage, setLoadingMessage] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState(\"\");\n  if (!results || results.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n  const handleBookButtonClick = async book => {\n    console.log(\"선택한 책:\", book);\n\n    // isbn이 없는 경우를 체크\n    if (!book.isbn) {\n      console.error(\"ISBN이 없습니다:\", book);\n      alert(\"ISBN 정보가 없는 책입니다.\");\n      return;\n    }\n\n    // 대기 중 알림 표시\n    setLoadingMessage(\"카드뉴스를 생성중입니다.\");\n    setModalContent(\"카드뉴스를 생성중입니다.\");\n    setIsModalOpen(true); // 모달 열기\n\n    try {\n      const response = await fetch(\"http://localhost:5001/book\", {\n        // 경로 수정\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          isbn: book.isbn,\n          // ISBN\n          title: book.title,\n          // 책 제목\n          author: book.author,\n          // 저자\n          publisher: book.publisher,\n          // 출판사\n          pubdate: book.pubdate,\n          // 출판일\n          description: book.description,\n          // 설명\n          book_cover: book.image // 책 표지 URL\n        })\n      });\n      if (response.ok) {\n        setModalContent(\"카드뉴스가 생성되었습니다!\");\n      } else {\n        throw new Error(\"서버 전송 실패\");\n      }\n    } catch (error) {\n      console.error(\"서버 전송 오류:\", error);\n      setIsModalOpen(\"서버에 책 정보를 전송하는 데 실패했습니다.\");\n    } finally {\n      setTimeout(() => {\n        setIsModalOpen(true); // 모달 열기\n      });\n    }\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false); // 모달 닫기\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 px-4\",\n    children: [isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      message: modalContent,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }, this), results.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow rounded flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.image,\n        alt: item.title,\n        className: \"w-32 h-48 object-cover mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-bold text-lg mb-2\",\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mb-4\",\n        children: item.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\",\n        onClick: () => handleBookButtonClick(item),\n        children: \"\\uC694\\uC57D\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchResults, \"pF/31zzd33WdS+3GY3HWZdhcTNE=\");\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","SearchResults","results","_s","loadingMessage","setLoadingMessage","isModalOpen","setIsModalOpen","modalContent","setModalContent","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleBookButtonClick","book","console","log","isbn","error","alert","response","fetch","method","headers","body","JSON","stringify","title","author","publisher","pubdate","description","book_cover","image","ok","Error","setTimeout","handleCloseModal","message","onClose","map","item","index","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sstvl/graduation/client/src/components/SearchResults.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"./Modal\"; // 알림 창\r\n\r\nconst SearchResults = ({ results }) => {\r\n\r\n    const [loadingMessage, setLoadingMessage] = useState(\"\");\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [modalContent, setModalContent] = useState(\"\"); \r\n\r\n\r\n    if (!results || results.length === 0) {\r\n        return <p className=\"text-gray-500\">검색 결과가 없습니다.</p>;\r\n    }\r\n\r\n    const handleBookButtonClick = async (book) => {\r\n        console.log(\"선택한 책:\", book);\r\n\r\n        // isbn이 없는 경우를 체크\r\n        if (!book.isbn) {\r\n        console.error(\"ISBN이 없습니다:\", book);\r\n        alert(\"ISBN 정보가 없는 책입니다.\");\r\n        return;\r\n        }\r\n\r\n        // 대기 중 알림 표시\r\n        setLoadingMessage(\"카드뉴스를 생성중입니다.\");\r\n        setModalContent(\"카드뉴스를 생성중입니다.\");\r\n        setIsModalOpen(true); // 모달 열기\r\n\r\n        \r\n        try {\r\n            const response = await fetch(\"http://localhost:5001/book\", {  // 경로 수정\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    isbn: book.isbn, // ISBN\r\n                    title: book.title, // 책 제목\r\n                    author: book.author, // 저자\r\n                    publisher: book.publisher, // 출판사\r\n                    pubdate: book.pubdate, // 출판일\r\n                    description: book.description, // 설명\r\n                    book_cover: book.image // 책 표지 URL\r\n                })\r\n            });\r\n    \r\n            if (response.ok) {\r\n                setModalContent(\"카드뉴스가 생성되었습니다!\");\r\n            } else {\r\n                throw new Error(\"서버 전송 실패\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"서버 전송 오류:\", error);\r\n            setIsModalOpen(\"서버에 책 정보를 전송하는 데 실패했습니다.\");\r\n        } finally{\r\n            setTimeout(() => {\r\n                setIsModalOpen(true); // 모달 열기\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setIsModalOpen(false); // 모달 닫기\r\n    };\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 px-4\">\r\n            {isModalOpen && <Modal message={modalContent} onClose={handleCloseModal} />}\r\n            {results.map((item, index) => (\r\n                <div\r\n                    key={index}\r\n                    className=\"bg-white p-4 shadow rounded flex flex-col items-center\"\r\n                >\r\n                    <img\r\n                        src={item.image}\r\n                        alt={item.title}\r\n                        className=\"w-32 h-48 object-cover mb-4\"\r\n                    />\r\n                    <h3 className=\"font-bold text-lg mb-2\">{item.title}</h3>\r\n                    <p className=\"text-sm text-gray-600 mb-4\">{item.author}</p>\r\n\r\n                    <button\r\n                        className=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\"\r\n                        onClick={() => handleBookButtonClick(item)}\r\n                    >\r\n                        요약하기\r\n                    </button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}